[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\Hiep\esp32\VXL_AI_DLDT\Line-FolloweRobot\build\bootloader\esp-idf\esptool_py && D:\Hiep\esp32\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Hiep/esp32/VXL_AI_DLDT/Line-FolloweRobot/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable Line-FollowerRobot.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Hiep/esp32/VXL_AI_DLDT/Line-FolloweRobot/build/Line-FollowerRobot.bin
[7/8] cmd.exe /C "cd /D D:\Hiep\esp32\VXL_AI_DLDT\Line-FolloweRobot\build\esp-idf\esptool_py && D:\Hiep\esp32\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Hiep/esp32/VXL_AI_DLDT/Line-FolloweRobot/build/partition_table/partition-table.bin D:/Hiep/esp32/VXL_AI_DLDT/Line-FolloweRobot/build/Line-FollowerRobot.bin"
Line-FollowerRobot.bin binary size 0x2d520 bytes. Smallest app partition is 0x100000 bytes. 0xd2ae0 bytes (82%) free.
[7/8] cmd.exe /C "cd /D D:\Hiep\esp32\Espressif\frameworks\esp-idf-v5.2.3\components\esptool_py && D:\Hiep\esp32\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3 -D SERIAL_TOOL=D:/Hiep/esp32/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/Hiep/esp32/Vesptool.py --chip esp32 -p COM8 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 Line-FollowerRobot.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM8

A fatal error occurred: Could not open COM8, the port is busy or doesn't exist.
(could not open port 'COM8': FileNotFoundError(2, 'The system cannot find the file specified.', None, 2))

Hint: Check if the port is correct and ESP connected

XL_AI_DLDT/Line-FolloweRobot/build -P D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3/components/esptool_py/run_serial_tool.cmake"
FAILED: CMakeFiles/flash D:/Hiep/esp32/VXL_AI_DLDT/Line-FolloweRobot/build/CMakeFiles/flash 
cmd.exe /C "cd /D D:\Hiep\esp32\Espressif\frameworks\esp-idf-v5.2.3\components\esptool_py && D:\Hiep\esp32\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3 -D SERIAL_TOOL=D:/Hiep/esp32/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/Hiep/esp32/VXL_AI_DLDT/Line-FolloweRobot/build -P D:/Hiep/esp32/Espressif/frameworks/esp-idf-v5.2.3/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.

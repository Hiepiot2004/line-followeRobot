#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_adc/adc_oneshot.h"

#define LDR_COUNT 8

const adc_channel_t LDR_PINS[LDR_COUNT] = {
    ADC_CHANNEL_4, // GPIO 32 - ADC1_CHANNEL_4
    ADC_CHANNEL_5, // GPIO 33 - ADC1_CHANNEL_5
    ADC_CHANNEL_6, // GPIO 34 - ADC1_CHANNEL_6
    ADC_CHANNEL_7, // GPIO 35 - ADC1_CHANNEL_7
    ADC_CHANNEL_6, // GPIO 14 - ADC2_CHANNEL_6
    ADC_CHANNEL_7, // GPIO 27 - ADC2_CHANNEL_7
    ADC_CHANNEL_8, // GPIO 25 - ADC2_CHANNEL_8
    ADC_CHANNEL_9  // GPIO 26 - ADC2_CHANNEL_9
};

adc_oneshot_unit_handle_t adc1_handle, adc2_handle;

void configure_adc() {
    // Cấu hình cho ADC1
    adc_oneshot_unit_init_cfg_t adc1_config = {
        .unit_id = ADC_UNIT_1
    };
    adc_oneshot_new_unit(&adc1_config, &adc1_handle);

    // Cấu hình cho ADC2
    adc_oneshot_unit_init_cfg_t adc2_config = {
        .unit_id = ADC_UNIT_2
    };
    adc_oneshot_new_unit(&adc2_config, &adc2_handle);

    adc_oneshot_chan_cfg_t chan_config = {
        .bitwidth = ADC_BITWIDTH_DEFAULT,
        .atten = ADC_ATTEN_DB_11,
    };

    // Cấu hình các kênh của ADC1
    for (int i = 0; i < 4; i++) {
        adc_oneshot_config_channel(adc1_handle, LDR_PINS[i], &chan_config);
    }

    // Cấu hình các kênh của ADC2
    for (int i = 4; i < LDR_COUNT; i++) {
        adc_oneshot_config_channel(adc2_handle, LDR_PINS[i], &chan_config);
    }
}

void app_main() {
    configure_adc();

    while (1) {
        int ldr_values[LDR_COUNT];
        // Đọc giá trị từ các kênh của ADC1
        for (int i = 0; i < 4; i++) {
            adc_oneshot_read(adc1_handle, LDR_PINS[i], &ldr_values[i]);
        }
        // Đọc giá trị từ các kênh của ADC2
        for (int i = 4; i < LDR_COUNT; i++) {
            adc_oneshot_read(adc2_handle, LDR_PINS[i], &ldr_values[i]);
        }

        // Hiển thị giá trị lên monitor
        for (int i = 0; i < LDR_COUNT; i++) {
            printf("LDR value %d: %d\n", i, ldr_values[i]);
        }

        vTaskDelay(pdMS_TO_TICKS(1000)); // Đọc giá trị mỗi giây
    }
}
